# YAML anchors
shared:

  # Task : sync and merge with rsync 2 rep. Used to merge stack and config
  - &merge-stack-and-config
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cycloid/cycloid-toolkit
        tag: latest
    run:
      path: /usr/bin/merge-stack-and-config
    outputs:
    - name: merged-stack
      path: "merged-stack"

groups:

- name: overview
  jobs:
  - terraform-plan
  - terraform-apply

- name: destroy
  jobs:
  - terraform-destroy

resource_types:

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 1.8.2

resources:

- name: tfstate
  type: terraform
  icon: terraform
  source:
    env_name: ($ environment $)
    backend_type: s3
    backend_config:
      bucket: ((terraform_storage_bucket_name))
      key: ($ project $)-($ environment $).tfstate
      workspace_key_prefix: ($ project $)
      region: ((scw_default_region))
      access_key: ((scw_access_key))
      secret_key: ((scw_secret_key))
      endpoints:
        s3: 'https://s3.((scw_default_region)).scw.cloud'
      skip_credentials_validation: true
      skip_region_validation: true
      skip_requesting_account_id: true
    vars:
      scw_project_id: ((scw_project_id))
      scw_organization_id: ((scw_organization_id))
      scw_access_key: ((scw_access_key))
      scw_secret_key: ((scw_secret_key))
      scw_region: ((scw_default_region))
      env: ($ environment $)
      customer: ($ organization_canonical $)
      project: ($ project $)
    env:
      # required for the s3 backend to work when using external scaleway terraform remote state references
      AWS_ACCESS_KEY_ID: ((scw_access_key))
      AWS_SECRET_ACCESS_KEY: ((scw_secret_key))

# The Terraform stack (will be merged with the config)
- name: git_stack-terraform
  type: git
  icon: git
  source:
    uri: https://github.com/cycloid-community-catalog/stack-kubernetes.git
    branch: master
    paths:
      - terraform/scaleway-kapsule/*

# The Terraform config (will be merged with the stack)
- name: git_config-terraform
  type: git
  icon: git
  source:
    uri: ($ cr_url $)
    branch: ($ cr_branch $)
    private_key: ((($ cr_cred_path $).ssh_key))
    paths:
      - ($ project $)/terraform/($ environment $)/*

jobs:

# Merge and trigger a plan whenever there is a commit in Terraform stack or config
- name: terraform-plan
  serial: True
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
      - get: git_stack-terraform
        trigger: true
      - get: git_config-terraform
        trigger: true

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_config-terraform
            path: "config"
          - name: git_stack-terraform
            path: "stack"
        params:
          CONFIG_PATH: ($ project $)/terraform/($ environment $)
          STACK_PATH: terraform/scaleway-kapsule

      - put: tfstate
        params:
          plan_only: true
          terraform_source: merged-stack/

# Merge and trigger an apply manually (no autostart of this job)
- name: terraform-apply
  serial: True
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
      - get: git_stack-terraform
        trigger: false
        passed:
          - terraform-plan
      - get: git_config-terraform
        trigger: false
        passed:
          - terraform-plan
      - get: tfstate
        trigger: false
        passed:
          - terraform-plan

      - task: merge-stack-and-config
        config:
          <<: *merge-stack-and-config
          inputs:
          - name: git_config-terraform
            path: "config"
          - name: git_stack-terraform
            path: "stack"
        params:
          CONFIG_PATH: ($ project $)/terraform/($ environment $)
          STACK_PATH: terraform/scaleway-kapsule

      - put: tfstate
        params:
          plan_run: true
          terraform_source: merged-stack/

- name: terraform-destroy
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
        - get: git_stack-terraform
          trigger: false
        - get: git_config-terraform
          trigger: false
        - task: merge-stack-and-config
          config:
            <<: *merge-stack-and-config
            inputs:
            - name: git_config-terraform
              path: "config"
            - name: git_stack-terraform
              path: "stack"
          params:
            CONFIG_PATH: ($ project $)/terraform/($ environment $)
            STACK_PATH: terraform/scaleway-kapsule

        - put: tfstate
          params:
            action: destroy
            terraform_source: merged-stack/
          get_params:
            action: destroy
